AnimTriggerRead: void AnimTriggerRead(uint* path);
CompilerCleanup: void CompileCleanUp(int* file);
ConfigCompile: int ConfigCompile(int p1,char* cfg_file,int p3);
ConfigRead: int ConfigRead(char* cfg_file);
ConfigWrite: void ConfigWrite(char* cfg_file);
CutsceneDelete: void CutsceneDelete(char* buffer);
ErrorShow: void ErrorShow(char* err_msg);
FramesSet: void FramesSet(int frames);
GameMaterialLoad: void GameMaterialLoad(void);
GraphicsReset: void GraphicsReset(char* buffer);
GraphOpen: void GraphOpen(uint level,char* graph_str);
HumanplayerLoad: void HumanplayerLoad(void);
InputDisable: void InputDisable(char* buffer);
InputEnable: void InputEnable(char* buffer);
LogAdd: void LogAdd(byte* log_msg);
LevelLoad: void LevelLoad(int level_path,int level_len);
LevelQuit: void LevelQuit(void);
LevelRestart: void LevelRestart(void);
LevelStart: void LevelStart(int p1);
MenuManager: int* MenuManager(int p1,char *menu_str,char p3,char p4,int p5);
MusicDisable: void MusicDisable(char* buffer);
MusicEnable: void MusicEnable(char* buffer);
MusicSetSfxVolume: void MusicSetSfxVolume(float volume);
MusicSetVolume: void MusicSetVolume(float volume,float volume);
MusicUpdateVolume: void MusicUpdateVolume(char* buffer);
PhysicsObjTypeRead: void PhysicsObjTypeRead(char* cfg_file);
QhashInit: void QHashInit(char hash_val);
QhashReset: void QHashReset(void);
QscCompile: void QscCompile(char* qsc_file);
QtaskUpdate: void QtaskUpdate(void);
QtaskUpdateList: void QtaskUpdateList(int* p1);
QvmAssemble: int QvmAssemble(char *file_out,char *file_in);
QvmCompile: void QvmCompile(int file);
QvmLoad: int * QvmLoad(char *file_name);
QvmParse: int QvmParse(char *file_name,int mem_alloc_addr);
ResourceFlush: void ResourceFlush(int* p1);
ResourceLoad: int * ResourceLoad(char *resource_file,char **buffer);
ResourceUnload: void ResourceUnload(int *resource_file);
IsResourceLoaded: int IsResourceLoaded(char *res_file,int *res_file_ptr);
ResourcePackUnpack: int ResourcePackUnpack(char *res_file,char **buffer);
ResourceUnpack: void ResourceUnpack(int* res_ptr, int res_addr, int res_size);
ScriptInit: void ScriptInit(char* file_name,int p2,int p3,int p4);
ScriptSetsymbolCxt: void ScriptSetsymbolCxt(byte *symbol_name,int** symbol_buf);
StatusMessageClear: void StatusMessageClear (char* buffer);
StatusMessageShow: int* StatusMessageShow(int status_timer,char* msg,char *sprite,char *status_byte);
SymbolRemove: void SymbolRemove(int *p1,int *symbol_name);
TasktypeSet: void TasktypeSet(int** task_str,int task_id);
WarningShow: void WarningShow(char* warn_msg);
WeaponConfigRead: int WeaponConfigRead(int p1,char *cfg_file);
SymbolCheck: int * SymbolCheck(int *p1,int **symbol_name,int* p3);
GameDefineOptions: void GameDefineOptions(int **option_str,int option_func_addr,int opt1,int opt2);
ScriptBufInit: void ScriptBufInit(int *buff_arr1,int buff_arr2,int buff,int buff_size);
SoundLoad: void SoundLoad(char *sound_dir);
MemoryAlloc: uint MemAlloc(int num, int size);
MemoryDealloc: uint MemDealloc(void);
MissionOpen: void MissionOpen(char **ptr_file);
FileOpen: void* FileOpen(const char* file,char *mode);
QFileOpen: void* QFileOpen(const char* file,char *mode);
RigidDyncubeObjRead: void RigidDynCubeObjRead(uint *cfg_file);
MagicObjLoad: void MagicObjLoad(char *path);
AnimTriggerLoad: void AnimTriggerLoad(char *path);
PhysicsObjLoad: void PhysicsObjLoad(char *path);
AmmoTypeOpen: void AmmoTypeOpen(void);
WeaponTypeOpen: void WeaponTypeOpen(void);
GameDataSymbolLoad: int GameDataSymbolLoad(char* sym_buf,char* sym_path,char* sym_name);
GameDataSymbolRemove: void GameDataSymbolRemove(char* sym_buf);
SymbolRegisterBool8: void SymbolRegisterBool8(int **sym_buf,int sym_addr);
SymbolRegisterInt16: void SymbolRegisterInt16(int **sym_buf,int sym_addr);
SymbolRegisterInt32: void SymbolRegisterInt16(int **sym_buf,int sym_addr);
SymbolRegisterReal32: void SymbolRegisterReal32(int **sym_buf,int sym_addr);
LoadingScreenShow: void LoadingScreenShow(int loading_type);
QTaskHashTableSet: void QTaskHashTableSet(int **symbol,int ptr_func,int symbol_val,int p4,int p5,int p6,int p7);
WeaponsCountGet: int WeaponsCountGet();
WeaponGunPickup: void WeaponGunPickup(int param_ptr, int* type_ptr);
WeaponAmmoPickup: void WeaponAmmoPickup(int param_ptr, int* type_ptr);
PlayerXPHit: uint PlayerXPHit();
HumanViewCam: void HumanViewCam(int soldier_ptr,int cam_type);
HumanTaskViewReset: void HumanTaskViewReset(int human_ptr);
IsPlayerProfileActive: char* IsPlayerProfileActive();
SoldierExecute: void SoldierExecute(int ptr, int addr);
